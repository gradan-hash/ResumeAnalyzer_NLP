# -*- coding: utf-8 -*-
"""resumeanalyser.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VTUjDtIV5qPxlsV5ENRJHtEU4Czul5DY
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv("/content/UpdatedResumeDataSet.csv")

df.head()

df.shape

"""exploration of data"""

df["Category"].unique()

df['Category'] = pd.Categorical(df['Category'])
plt.figure(figsize = (15,5))
sns.countplot(data=df, x='Category')
plt.xticks(rotation=90)
plt.show()

counts = df["Category"].value_counts()
labels = df["Category"].unique()

colors = plt.cm.plasma(np.linspace(0, 1, len(labels)))

plt.figure(figsize=(20, 10))
plt.pie(counts, labels=labels, autopct="%1.1f%%", shadow=True, colors=colors)

plt.title("Distribution of Categories")
plt.show()

"""exploring"""

df['Category'][0]

df["Resume"][0]

import re

def cleanResume(txt):
  # Remove null values
  cleanText = re.sub(r'null', ' ', txt, flags=re.IGNORECASE)  # Case-insensitive

  # Remove URLs
  cleanText = re.sub(r'http\S+\s', ' ', cleanText)

  # Remove email addresses
  cleanText = re.sub(r'@\S+', ' ', cleanText)
  cleanText = re.sub(r'\r\n', ' ', cleanText)

  # Remove hashtags
  cleanText = re.sub(r'#\S+', ' ', cleanText)

  # Remove special characters and non-ASCII characters (except for spaces)
  cleanText = re.sub(r'[!\"#&$%\'()+,_:;<=>?@[\\]^-]+', ' ', cleanText)
  cleanText = re.sub(r'[^\x00-\x7f]+', ' ', cleanText)

  # Remove 'TR' and 'cc'
  cleanText = re.sub(r'TR|cc', ' ', cleanText)

  return cleanText

cleanResume("my ## ,@@@@ website is http://helloword  access it")

df['Resume']=df['Resume'].apply(lambda x: cleanResume(x))

df["Resume"][0]

"""words to categorical data"""

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()

le.fit(df["Category"].values)
df["Category"] = le.transform(df["Category"])

df.head()

df.Category.unique()

#'Data Science', 'HR', 'Advocate', 'Arts', 'Web Designing',
# 'Mechanical Engineer', 'Sales', 'Health and fitness',
 #   'Civil Engineer', 'Java Developer', 'Business Analyst',
#  'SAP Developer', 'Automation Testing', 'Electrical Engineering',
# 'Operations Manager', 'Python Developer', 'DevOps Engineer',
#'Network Security Engineer', 'PMO', 'Database', 'Hadoop',
# 'ETL Developer', 'DotNet Developer', 'Blockchain', 'Testing'

from sklearn.feature_extraction.text import TfidfVectorizer
tfidf = TfidfVectorizer(stop_words = "english")



tfidf.fit(df["Resume"])
requiredtext = tfidf.transform(df["Resume"])

df

requiredtext

from sklearn.model_selection import train_test_split

# x is the input
# y is the output
x=requiredtext
y=df["Category"]
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.33,random_state=42)

x_train.shape

x_test.shape

"""train the model and printclassification"""

from sklearn.neighbors import KNeighborsClassifier
from sklearn.multiclass import OneVsRestClassifier
from sklearn.metrics import accuracy_score

clf = OneVsRestClassifier(KNeighborsClassifier())
clf.fit(x_train,y_train)
ypredict = clf.predict(x_test)
score =accuracy_score(y_test,ypredict)
print(score)

"""preediction system

"""

import pickle
pickle.dump(tfidf,open('tfidf.pkl','wb'))
pickle.dump(clf, open('clf.pkl', 'wb'))

myresume = """John Doe
123 Main Street, City, State, ZIP
Phone: (123) 456-7890
Email: johndoe@example.com
LinkedIn: www.linkedin.com/in/johndoe

Summary:
---------
Highly skilled and motivated Java Developer with over 5 years of experience in designing, developing, and maintaining Java applications. Adept at collaborating with cross-functional teams to deliver high-quality software solutions. Strong problem-solving abilities and a passion for staying up-to-date with the latest technologies.

Skills:
-------
- Java SE/EE
- Spring Framework (Spring Boot, Spring MVC)
- Hibernate ORM
- RESTful Web Services
- SQL and Database Management (MySQL, PostgreSQL)
- JavaScript, HTML, CSS
- Version Control (Git)
- Agile/Scrum Methodologies
- Test-Driven Development (TDD)
- Problem-solving and Debugging
- Excellent Communication Skills

Professional Experience:
------------------------
Java Developer | ABC Tech Solutions, City, State | June 2018 - Present
- Designed and implemented RESTful APIs using Spring Boot, resulting in improved data retrieval and processing efficiency.
- Collaborated with front-end developers to create responsive and user-friendly web applications.
- Utilized Hibernate ORM for database interactions, ensuring data integrity and security.
- Implemented unit tests using JUnit, resulting in a 20% reduction in bug reports during development.
- Participated in daily stand-up meetings and sprint planning sessions as part of an Agile development team.

Software Engineer Intern | XYZ Software, City, State | May 2017 - August 2017
- Assisted in the development of a Java-based inventory management system, contributing to the optimization of inventory tracking processes.
- Conducted code reviews and identified areas for code refactoring and performance improvement.
- Collaborated with senior developers to troubleshoot and resolve software defects.
- Gained hands-on experience with Java development and software engineering best practices.

Education:
----------
Bachelor of Science in Computer Science | University of ABC | Graduated May 2018
- Relevant Coursework: Data Structures, Object-Oriented Programming, Database Management, Software Engineering

Certifications:
---------------
- Oracle Certified Java Programmer (OCP)
- Scrum Master Certification (Scrum.org)

Projects:
---------
1. Online Shopping Portal
   - Developed a web-based shopping portal using Java, Spring Boot, and Hibernate.
   - Implemented user authentication, product catalog, and shopping cart functionality.
   - Conducted performance testing to optimize database queries, resulting in faster page load times.

2. Employee Management System
   - Designed and built an employee management system with CRUD operations in Java.
   - Utilized JavaFX for the user interface and JDBC for database connectivity.
   - Implemented role-based access control for secure data management.

3. Blogging Platform
   - Created a simple blogging platform using Spring MVC and Thymeleaf.
   - Implemented features for user registration, blog post creation, and commenting.
   - Utilized Spring Security for authentication and authorization.

Languages:
----------
- English (Fluent)
- Spanish (Basic)

References:
-----------
Available upon request.

"""

import pickle

# Load the trained classifier
clf = pickle.load(open('clf.pkl', 'rb'))

# Clean the input resume
cleaned_resume = cleanResume(myresume)

# Transform the cleaned resume using the trained TfidfVectorizer
input_features = tfidf.transform([cleaned_resume])

# Make the prediction using the loaded classifier
prediction_id = clf.predict(input_features)[0]

# Map category ID to category name
category_mapping = {
    6: 'Data Science',
    12: 'HR',
    0: 'Advocate',
    1: 'Arts',
    24: 'Web Designing',
    16: 'Mechanical Engineer',
    22: 'Sales',
    14: 'Health and fitness',
    5: 'Civil Engineer',
    15: 'Java Developer',
    4: 'Business Analyst',
    21: 'SAP Developer',
    2: 'Automation Testing',
    11: 'Electrical Engineering',
    18: 'Operations Manager',
    20: 'Python Developer',
    8: 'DevOps Engineer',
    17: 'Network Security Engineer',
    19: 'PMO',
    7: 'Database',
    13: 'Hadoop',
    10: 'ETL Developer',
    9: 'DotNet Developer',
    3: 'Blockchain',
    23: 'Testing'
}


category_name = category_mapping.get(prediction_id, "Unknown")

print("Predicted Category:", category_name)
print(prediction_id)

